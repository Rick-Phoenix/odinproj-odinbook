services:
  prod:
    pull_policy: build
    build:
      context: .
      dockerfile: ./docker/prod.dockerfile
    image: nexus:prod
    networks:
      - caddy
    labels:
      caddy: ${VITE_DOMAIN}
      caddy.reverse_proxy: "{{upstreams ${PORT}}}"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_PROD_URL}
    depends_on:
      - postgres
    restart: unless-stopped

  dev:
    pull_policy: build
    build:
      context: .
      dockerfile: ./docker/dev.dockerfile
    image: nexus:dev
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - caddy
    labels:
      caddy: ${VITE_DOMAIN}
      caddy.reverse_proxy: "{{upstreams ${PORT}}}"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_PROD_URL}
    depends_on:
      - postgres
    restart: unless-stopped
  postgres:
    image: postgres:14.17
    networks:
      - caddy
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: {}

networks:
  caddy:
    external: true
