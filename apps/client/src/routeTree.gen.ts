/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as PostImport } from './routes/post'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AppRoomsIndexImport } from './routes/_app/rooms/index'
import { Route as AppMarketplaceIndexImport } from './routes/_app/marketplace/index'
import { Route as AppChatsIndexImport } from './routes/_app/chats/index'
import { Route as AppChatsContactImport } from './routes/_app/chats/$contact'
import { Route as AppRoomsRoomIndexImport } from './routes/_app/rooms/$room/index'
import { Route as AppMarketplaceCategoryIndexImport } from './routes/_app/marketplace/$category/index'
import { Route as AppMarketplaceCategoryItemIdImport } from './routes/_app/marketplace/$category/$itemId'
import { Route as AppRoomsRoomPostsPostidImport } from './routes/_app/rooms/$room/posts/$postid'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const PostRoute = PostImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppRoomsIndexRoute = AppRoomsIndexImport.update({
  id: '/rooms/',
  path: '/rooms/',
  getParentRoute: () => AppRoute,
} as any)

const AppMarketplaceIndexRoute = AppMarketplaceIndexImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => AppRoute,
} as any)

const AppChatsIndexRoute = AppChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AppRoute,
} as any)

const AppChatsContactRoute = AppChatsContactImport.update({
  id: '/chats/$contact',
  path: '/chats/$contact',
  getParentRoute: () => AppRoute,
} as any)

const AppRoomsRoomIndexRoute = AppRoomsRoomIndexImport.update({
  id: '/rooms/$room/',
  path: '/rooms/$room/',
  getParentRoute: () => AppRoute,
} as any)

const AppMarketplaceCategoryIndexRoute =
  AppMarketplaceCategoryIndexImport.update({
    id: '/marketplace/$category/',
    path: '/marketplace/$category/',
    getParentRoute: () => AppRoute,
  } as any)

const AppMarketplaceCategoryItemIdRoute =
  AppMarketplaceCategoryItemIdImport.update({
    id: '/marketplace/$category/$itemId',
    path: '/marketplace/$category/$itemId',
    getParentRoute: () => AppRoute,
  } as any)

const AppRoomsRoomPostsPostidRoute = AppRoomsRoomPostsPostidImport.update({
  id: '/rooms/$room/posts/$postid',
  path: '/rooms/$room/posts/$postid',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_app/chats/$contact': {
      id: '/_app/chats/$contact'
      path: '/chats/$contact'
      fullPath: '/chats/$contact'
      preLoaderRoute: typeof AppChatsContactImport
      parentRoute: typeof AppImport
    }
    '/_app/chats/': {
      id: '/_app/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AppChatsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/marketplace/': {
      id: '/_app/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof AppMarketplaceIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/rooms/': {
      id: '/_app/rooms/'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof AppRoomsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/marketplace/$category/$itemId': {
      id: '/_app/marketplace/$category/$itemId'
      path: '/marketplace/$category/$itemId'
      fullPath: '/marketplace/$category/$itemId'
      preLoaderRoute: typeof AppMarketplaceCategoryItemIdImport
      parentRoute: typeof AppImport
    }
    '/_app/marketplace/$category/': {
      id: '/_app/marketplace/$category/'
      path: '/marketplace/$category'
      fullPath: '/marketplace/$category'
      preLoaderRoute: typeof AppMarketplaceCategoryIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/rooms/$room/': {
      id: '/_app/rooms/$room/'
      path: '/rooms/$room'
      fullPath: '/rooms/$room'
      preLoaderRoute: typeof AppRoomsRoomIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/rooms/$room/posts/$postid': {
      id: '/_app/rooms/$room/posts/$postid'
      path: '/rooms/$room/posts/$postid'
      fullPath: '/rooms/$room/posts/$postid'
      preLoaderRoute: typeof AppRoomsRoomPostsPostidImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppChatsContactRoute: typeof AppChatsContactRoute
  AppChatsIndexRoute: typeof AppChatsIndexRoute
  AppMarketplaceIndexRoute: typeof AppMarketplaceIndexRoute
  AppRoomsIndexRoute: typeof AppRoomsIndexRoute
  AppMarketplaceCategoryItemIdRoute: typeof AppMarketplaceCategoryItemIdRoute
  AppMarketplaceCategoryIndexRoute: typeof AppMarketplaceCategoryIndexRoute
  AppRoomsRoomIndexRoute: typeof AppRoomsRoomIndexRoute
  AppRoomsRoomPostsPostidRoute: typeof AppRoomsRoomPostsPostidRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppChatsContactRoute: AppChatsContactRoute,
  AppChatsIndexRoute: AppChatsIndexRoute,
  AppMarketplaceIndexRoute: AppMarketplaceIndexRoute,
  AppRoomsIndexRoute: AppRoomsIndexRoute,
  AppMarketplaceCategoryItemIdRoute: AppMarketplaceCategoryItemIdRoute,
  AppMarketplaceCategoryIndexRoute: AppMarketplaceCategoryIndexRoute,
  AppRoomsRoomIndexRoute: AppRoomsRoomIndexRoute,
  AppRoomsRoomPostsPostidRoute: AppRoomsRoomPostsPostidRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/post': typeof PostRoute
  '/signup': typeof SignupRoute
  '/chats/$contact': typeof AppChatsContactRoute
  '/chats': typeof AppChatsIndexRoute
  '/marketplace': typeof AppMarketplaceIndexRoute
  '/rooms': typeof AppRoomsIndexRoute
  '/marketplace/$category/$itemId': typeof AppMarketplaceCategoryItemIdRoute
  '/marketplace/$category': typeof AppMarketplaceCategoryIndexRoute
  '/rooms/$room': typeof AppRoomsRoomIndexRoute
  '/rooms/$room/posts/$postid': typeof AppRoomsRoomPostsPostidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/post': typeof PostRoute
  '/signup': typeof SignupRoute
  '/chats/$contact': typeof AppChatsContactRoute
  '/chats': typeof AppChatsIndexRoute
  '/marketplace': typeof AppMarketplaceIndexRoute
  '/rooms': typeof AppRoomsIndexRoute
  '/marketplace/$category/$itemId': typeof AppMarketplaceCategoryItemIdRoute
  '/marketplace/$category': typeof AppMarketplaceCategoryIndexRoute
  '/rooms/$room': typeof AppRoomsRoomIndexRoute
  '/rooms/$room/posts/$postid': typeof AppRoomsRoomPostsPostidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/post': typeof PostRoute
  '/signup': typeof SignupRoute
  '/_app/chats/$contact': typeof AppChatsContactRoute
  '/_app/chats/': typeof AppChatsIndexRoute
  '/_app/marketplace/': typeof AppMarketplaceIndexRoute
  '/_app/rooms/': typeof AppRoomsIndexRoute
  '/_app/marketplace/$category/$itemId': typeof AppMarketplaceCategoryItemIdRoute
  '/_app/marketplace/$category/': typeof AppMarketplaceCategoryIndexRoute
  '/_app/rooms/$room/': typeof AppRoomsRoomIndexRoute
  '/_app/rooms/$room/posts/$postid': typeof AppRoomsRoomPostsPostidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/post'
    | '/signup'
    | '/chats/$contact'
    | '/chats'
    | '/marketplace'
    | '/rooms'
    | '/marketplace/$category/$itemId'
    | '/marketplace/$category'
    | '/rooms/$room'
    | '/rooms/$room/posts/$postid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/post'
    | '/signup'
    | '/chats/$contact'
    | '/chats'
    | '/marketplace'
    | '/rooms'
    | '/marketplace/$category/$itemId'
    | '/marketplace/$category'
    | '/rooms/$room'
    | '/rooms/$room/posts/$postid'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/login'
    | '/post'
    | '/signup'
    | '/_app/chats/$contact'
    | '/_app/chats/'
    | '/_app/marketplace/'
    | '/_app/rooms/'
    | '/_app/marketplace/$category/$itemId'
    | '/_app/marketplace/$category/'
    | '/_app/rooms/$room/'
    | '/_app/rooms/$room/posts/$postid'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
  PostRoute: typeof PostRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
  PostRoute: PostRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/login",
        "/post",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/chats/$contact",
        "/_app/chats/",
        "/_app/marketplace/",
        "/_app/rooms/",
        "/_app/marketplace/$category/$itemId",
        "/_app/marketplace/$category/",
        "/_app/rooms/$room/",
        "/_app/rooms/$room/posts/$postid"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/post": {
      "filePath": "post.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_app/chats/$contact": {
      "filePath": "_app/chats/$contact.tsx",
      "parent": "/_app"
    },
    "/_app/chats/": {
      "filePath": "_app/chats/index.tsx",
      "parent": "/_app"
    },
    "/_app/marketplace/": {
      "filePath": "_app/marketplace/index.tsx",
      "parent": "/_app"
    },
    "/_app/rooms/": {
      "filePath": "_app/rooms/index.tsx",
      "parent": "/_app"
    },
    "/_app/marketplace/$category/$itemId": {
      "filePath": "_app/marketplace/$category/$itemId.tsx",
      "parent": "/_app"
    },
    "/_app/marketplace/$category/": {
      "filePath": "_app/marketplace/$category/index.tsx",
      "parent": "/_app"
    },
    "/_app/rooms/$room/": {
      "filePath": "_app/rooms/$room/index.tsx",
      "parent": "/_app"
    },
    "/_app/rooms/$room/posts/$postid": {
      "filePath": "_app/rooms/$room/posts/$postid.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
